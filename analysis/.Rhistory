filter(tangram_properties,exp4=="yes"&nameability=="low")$simpson_diversity,var.equal=T)
#add no strategy columns
verbal_strategy$noStrategy <- ifelse(verbal_strategy$singleFeature==0&verbal_strategy$multipleFeature==0&verbal_strategy$holisticStrategy==0,1,0)
verbal_strategy$noStrategy_DimType <- ifelse(verbal_strategy$singleDimType==0&verbal_strategy$combinedDimType==0,1,0)
#convert to long form for tallying strategies used
verbal_strategy_long <- gather(verbal_strategy, codingType, is_used,singleFeature:noStrategy_DimType)
#combine with data (subset to experiments with verbal strategy info)
verbal_strategy_d <- filter(d, experiment %in% c("1A","1B","3A","3B","s4_shape+color"))
verbal_strategy_d <- merge(verbal_strategy_d,verbal_strategy)
#overview over strategies reported
verbalSum1 <- subset(verbal_strategy_long, (experiment=="1A"|experiment=="1B")&codingType %in% c("singleFeature","multipleFeature","holisticStrategy","noStrategy")) %>%
group_by(condition, codingType) %>%
summarize(
avg=mean(as.numeric(is_used)),
N=sum(!is.na(as.numeric(is_used))),
n=sum(as.numeric(is_used)),
se.lower=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[1],
se.upper=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[2])
verbalSum1
#test for differences in strategy use between conditions
#single feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="1A"|experiment=="1B")&codingType=="singleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
#multiple feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="1A"|experiment=="1B")&codingType=="multipleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
#holistic strategy
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="1A"|experiment=="1B")&codingType=="holisticStrategy"),family=binomial)
summary(m)
Anova(m,type="III")
#Strategy use and categorization accuracy
m <- glmer(isRight~conditionC+singleFeature+multipleFeature+holisticStrategy+ (1|subject),data=subset(verbal_strategy_d,(experiment=="1A"|experiment=="1B")),family=binomial)
summary(m)
####S2: Experiments 1A-1B - Graphing
p1 <- ggplot(verbalSum1,aes(codingType,avg,group=condition,color=condition,fill=condition))+
geom_bar(stat="identity",position=position_dodge(.75),size=1,width=0.7)+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),position=position_dodge(.75),width=0,color="black")+
scale_x_discrete(name = "Strategy Type",limits=c("singleFeature","multipleFeature","holisticStrategy","noStrategy"),labels=c("single\nfeature","multiple\nfeature","holistic","none"))+
ylab("Percent Responses")+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
xlab("Strategy Type")+
theme_classic(base_size=18)+
theme(legend.position=c(0.5,0.8),legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))#+
#summarize subjects
subj_accuracy <- d %>%
group_by(experiment,subject,condition) %>%
summarize(accuracy=mean(isRight))
#merge with verbal strategy
subj_accuracy <- merge(subj_accuracy,verbal_strategy)
#summarize accuracy for each strategy type
sumSubjStrategySingleFeature_1 <- filter(subj_accuracy,experiment=="1A"|experiment=="1B") %>%
group_by(condition,singleFeature) %>%
summarize(strategy="single feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="singleFeature")
sumSubjStrategyMultipleFeature_1 <- filter(subj_accuracy,experiment=="1A"|experiment=="1B") %>%
group_by(condition,multipleFeature) %>%
summarize(strategy="multiple feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="multipleFeature")
sumSubjStrategyHolistic_1 <- filter(subj_accuracy,experiment=="1A"|experiment=="1B") %>%
group_by(condition,holisticStrategy) %>%
summarize(strategy="holistic",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="holisticStrategy")
sumSubjStrategyNoStrategy_1<- filter(subj_accuracy,experiment=="1A"|experiment=="1B") %>%
group_by(condition,noStrategy) %>%
summarize(strategy="none",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="noStrategy")
strategySummarized_1 <- bind_rows(sumSubjStrategySingleFeature_1,sumSubjStrategyMultipleFeature_1,sumSubjStrategyHolistic_1,sumSubjStrategyNoStrategy_1)
strategySummarized_1$strategyF <- factor(strategySummarized_1$strategy,levels=c("single feature","multiple feature","holistic","none"))
p1_Acc <- ggplot(strategySummarized_1,aes(condition,acc,group=as.factor(strategyCode),fill=as.factor(strategyCode)))+
geom_bar(stat="identity",position=position_dodge(.9))+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),color="black",position=position_dodge(.9),width=0.1)+
facet_wrap(~strategyF)+
scale_fill_brewer(palette="Accent",name="Strategy Used?",direction=-1,breaks=c(1,0),labels=c("yes","no"))+
theme_classic(base_size=18)+
ylab("Accuracy")
#plot all together
strat1 <- plot_grid(p1,p1_Acc,labels=c("A","B"))
strat1
#overview over strategies reported
verbalSum3 <- subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType %in% c("singleFeature","multipleFeature","holisticStrategy","noStrategy")) %>%
group_by(condition, codingType) %>%
summarize(
avg=mean(as.numeric(is_used)),
N=sum(!is.na(as.numeric(is_used))),
n=sum(as.numeric(is_used)),
se.lower=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[1],
se.upper=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[2])
verbalSum3
#test for differences in strategy use between conditions
#single feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType=="singleFeature"),family=binomial)
summary(m)
#overview over strategies reported
verbalSum3 <- subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType %in% c("singleFeature","multipleFeature","holisticStrategy","noStrategy")) %>%
group_by(condition, codingType) %>%
summarize(
avg=mean(as.numeric(is_used)),
N=sum(!is.na(as.numeric(is_used))),
n=sum(as.numeric(is_used)),
se.lower=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[1],
se.upper=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[2])
verbalSum3
#test for differences in strategy use between conditions
#single feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType=="singleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
verbalSum3
#multiple feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType=="multipleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
#holistic strategy
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="3A"|experiment=="3B")&codingType=="holisticStrategy"),family=binomial)
summary(m)
Anova(m,type="III")
#Strategy use and categorization accuracy
m <- glmer(isRight~conditionC+singleFeature+multipleFeature+holisticStrategy+ (1|subject),data=subset(verbal_strategy_d,(experiment=="3A"|experiment=="3B")),family=binomial)
summary(m)
####S2: Experiments 3A-3B - Graphing
p3 <- ggplot(verbalSum3,aes(codingType,avg,group=condition,color=condition,fill=condition))+
geom_bar(stat="identity",position=position_dodge(.75),size=1,width=0.7)+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),position=position_dodge(.75),width=0,color="black")+
scale_x_discrete(name = "Strategy Type", limits=c("singleFeature","multipleFeature","holisticStrategy","noStrategy"),labels=c("single\nfeature","multiple\nfeature","holistic","none"))+
ylab("Percent Responses")+
xlab("Strategy Type")+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
theme_classic(base_size=18)+
theme(legend.position=c(.8, .8),legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))+
ylim(0,1)
#summarize accuracy for each strategy type
sumSubjStrategySingleFeature_3 <- filter(subj_accuracy,experiment=="3A"|experiment=="3B") %>%
group_by(condition,singleFeature) %>%
summarize(strategy="single feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="singleFeature")
sumSubjStrategyMultipleFeature_3 <- filter(subj_accuracy,experiment=="3A"|experiment=="3B") %>%
group_by(condition,multipleFeature) %>%
summarize(strategy="multiple feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="multipleFeature")
sumSubjStrategyHolistic_3 <- filter(subj_accuracy,experiment=="3A"|experiment=="3B") %>%
group_by(condition,holisticStrategy) %>%
summarize(strategy="holistic",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="holisticStrategy")
sumSubjStrategyNoStrategy_3<- filter(subj_accuracy,experiment=="3A"|experiment=="3B") %>%
group_by(condition,noStrategy) %>%
summarize(strategy="none",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="noStrategy")
strategySummarized_3 <- bind_rows(sumSubjStrategySingleFeature_3,sumSubjStrategyMultipleFeature_3,sumSubjStrategyHolistic_3,sumSubjStrategyNoStrategy_3)
strategySummarized_3$strategyF <- factor(strategySummarized_3$strategy,levels=c("single feature","multiple feature","holistic","none"))
p3_Acc <- ggplot(strategySummarized_3,aes(condition,acc,group=as.factor(strategyCode),fill=as.factor(strategyCode)))+
geom_bar(stat="identity",position=position_dodge(.9))+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),color="black",position=position_dodge(.9),width=0.1)+
facet_wrap(~strategyF)+
scale_fill_brewer(palette="Accent",name="Strategy Used?",direction=-1,breaks=c(1,0),labels=c("yes","no"))+
theme_classic(base_size=18)+
ylab("Accuracy")+
coord_cartesian(ylim=c(0,1.1))+
scale_y_continuous(breaks=c(0, 0.25, 0.5,0.75,1))
#plot all together
strat3 <- plot_grid(p3,p3_Acc,labels=c("A","B"))
strat3
#summarizing subject performance
subj_s3 <- filter(d,experiment=="s3_verbal_interference") %>%
group_by(subject,condition,Age,Gender,L1) %>%
summarize(
accuracy=mean(isRight),
rt=mean(RT[RT<=5000&RT>=200]),
num_excludedTrials_rt=sum(RT>5000|RT<200),
total_trials = sum(!is.na(RT)))
#summarizing subject performance
subj_s3 <- filter(d,experiment=="s3_verbal_interference") %>%
group_by(subject,condition,Age,Gender,L1) %>%
summarize(
accuracy=mean(isRight),
rt=mean(RT[RT<=5000&RT>=200]),
num_excludedTrials_rt=sum(RT>5000|RT<200),
total_trials = sum(!is.na(RT)))
subj_s3_overall <- filter(d,experiment=="s3_verbal_interference") %>%
group_by(subject,Age,Gender,L1) %>%
summarize(
accuracy=mean(isRight),
rt=mean(RT[RT<=5000&RT>=200]),
num_excludedTrials_rt=sum(RT>5000|RT<200),
total_trials = sum(!is.na(RT)))
#overall descriptives
exps3_descriptives <- subj_s3_overall %>%
group_by() %>%
summarize(N=sum(!is.na(unique(subject))), gender_f=sum(Gender=="Female"), avg_age = round(mean(Age,na.rm=T),2), min_age=round(min(Age,na.rm=T),2),max_age=round(max(Age,na.rm=T),2), native_lang=sum(grepl("English",L1)))
exps3_descriptives
#overall accuracy
#high condition
mean(subj_s3$accuracy[subj_s3$condition=="high"])
confint(lm(accuracy~1,data=subset(subj_s3,condition=="high")))
#low condition
mean(subj_s3$accuracy[subj_s3$condition=="low"])
confint(lm(accuracy~1,data=subset(subj_s3,condition=="low")))
#interaction with experiment 2A
#add column for interference parameter
d$interference <- ifelse(d$experiment=="s3_verbal_interference","verbal interference",
ifelse(d$experiment=="2A","no verbal interference - Exp 2A",NA))
d$interferenceC <- ifelse(d$interference=="verbal interference",0.5,
ifelse(d$interference=="no verbal interference - Exp 2A",-0.5,NA))
mInterferenceInteraction_s3 <- glmer(isRight~conditionC*interferenceC+(1+conditionC|subject),data=filter(d, experiment %in% c("2A", "s3_verbal_interference")),family=binomial)
summary(mInterferenceInteraction_s3)
confint(mInterferenceInteraction_s3,method="Wald")[4:7,]
#model fit controlling for item type and random item effects
mInterferenceInteraction_item_s3 <- glmer(isRight~conditionC*interferenceC+ imageTypeC+(1+conditionC+imageTypeC|subject)+ (1|imageName),data=filter(d, experiment %in% c("2A", "s3_verbal_interference")),family=binomial)
summary(mInterferenceInteraction_item_s3)
confint(mInterferenceInteraction_item_s3,method="Wald")
#models fit while removing trials with very short (<200 ms) and very long (>5000ms) RTs
mInterferenceInteraction_rtExclusions_s3 <- glmer(isRight~conditionC*interferenceC+(1+conditionC|subject),data=filter(d, experiment %in% c("2A", "s3_verbal_interference")&(RT>=200&RT<=5000)),family=binomial)
summary(mInterferenceInteraction_s3)
confint(mInterferenceInteraction_s3,method="Wald")[4:7,]
#model fit controlling for item type and random item effects
mInterferenceInteraction_rtExclusions_item_s3 <- glmer(isRight~conditionC*interferenceC+ imageTypeC+(1+conditionC+imageTypeC|subject)+ (1|imageName),data=filter(d, experiment %in% c("2A", "s3_verbal_interference")&(RT>=200&RT<=5000)),family=binomial)
summary(mInterferenceInteraction_rtExclusions_item_s3)
confint(mInterferenceInteraction_rtExclusions_item_s3,method="Wald")
####Supplementary Materials: S3 - Graph ####
subj_blocks_s3_2A <- d %>%
filter(!is.na(interference)) %>%
group_by(experiment,interference,subject,condition,blockNum) %>%
summarize(accuracy=mean(isRight))
subjOverall_byBlock_s3_2A <- summarySEwithin(subj_blocks_s3_2A,"accuracy",betweenvars=c("interference"),withinvars=c("condition","blockNum"),idvar="subject")
#plot by block
ps3 <- ggplot(subjOverall_byBlock_s3_2A, aes(blockNum,accuracy,color=condition,group=condition))+
geom_line(size=2,position=position_dodge(.05))+
geom_errorbar(aes(ymin=accuracy-se,ymax=accuracy+se),width=0,size=0.75,position=position_dodge(.05),linetype="solid")+
geom_point(aes(fill=condition),size=4,position=position_dodge(.05))+
theme_classic(base_size=24)+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
xlab("Block")+
ylab("Training Accuracy")+
scale_y_continuous(breaks=seq(0.4,1,0.1), limits=c(0.38,1))+
theme(legend.position=c(.8, .3),legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))+
facet_wrap(~interference)
ps3
#summarizing subject performance
subj_s4 <- filter(d,experiment=="s4_shape+color") %>%
group_by(subject,condition,Age,Gender,L1,totalTimeMinutes) %>%
summarize(
accuracy=mean(isRight),
rt=mean(RT[RT<=5000]),
num_excludedTrials_rt=sum(RT>5000),
total_trials = sum(!is.na(RT)))
#overall descriptives
exps4_descriptives <- subj_s4 %>%
group_by() %>%
summarize(
N=sum(!is.na(unique(subject))),
gender_f=sum(Gender=="Female"),
avg_age = round(mean(Age,na.rm=T),2),
min_age=round(min(Age,na.rm=T),2),
max_age=round(max(Age,na.rm=T),2),
native_lang=sum(grepl("English",L1)),
num_high_condition=sum(condition=="high"),
mean_time=mean(totalTimeMinutes),
sd_time=sd(totalTimeMinutes))
exps4_descriptives
#overall accuracy
#high condition
mean(subj_s4$accuracy[subj_s4$condition=="high"])
confint(lm(accuracy~1,data=subset(subj_s4,condition=="high")))
#low condition
mean(subj_s4$accuracy[subj_s4$condition=="low"])
confint(lm(accuracy~1,data=subset(subj_s4,condition=="low")))
#overall RTs
#high condition
mean(subj_s4$rt[subj_s4$condition=="high"])
confint(lm(rt~1,data=subset(subj_s4,condition=="high")))
#low condition
mean(subj_s4$rt[subj_s4$condition=="low"])
confint(lm(rt~1,data=subset(subj_s4,condition=="low")))
#overall model fit
mLearn_s4 <- glmer(isRight~conditionC+ (1|subject),data=subset(d,experiment=="s4_shape+color"),family=binomial)
summary(mLearn_s4)
confint(mLearn_s4,method="Wald")[2:3,]
#overall model fit
mLearn_s4_item <- glmer(isRight~conditionC+ (1|subject)+(1|imageName),data=subset(d,experiment=="s4_shape+color"),family=binomial)
#overall model fit w/ random intercept for stimulus
mLearn_s4_item <- glmer(isRight~conditionC+ (1|subject)+(1|imageName),data=subset(d,experiment=="s4_shape+color"),family=binomial)
summary(mLearn_s4_item)
confint(mLearn_s4_item,method="Wald")[3:4,]
#interaction with trial number
mTrialInteraction_s4 <- glmer(isRight~conditionC*totalTrialNumC+ (1+totalTrialNumC|subject),data=subset(d,experiment=="s4_shape+color"),family=binomial,glmerControl(optimizer="bobyqa"))
summary(mTrialInteraction_s4)
confint(mTrialInteraction_s4,method="Wald")[4:7,]
#look at non-learners/ low-performers
#create 8
d$blockNum8 <- ifelse(d$totalTrialNum<8,1,
ifelse(d$totalTrialNum<17,2,
ifelse(d$totalTrialNum<25,3,
ifelse(d$totalTrialNum<33,4,
ifelse(d$totalTrialNum<41,5,6)))))
#summarizing subject performance
subj_s4_block <- subset(d,experiment=="s4_shape+color") %>%
group_by(subject,experiment,condition,blockNum8) %>%
summarize(accuracy=mean(isRight))
#participants with lower than 75% accuracy on 8 trials
non_learners <- unique(subj_s4_block$subject[subj_s4_block$accuracy<0.75&subj_s4_block$blockNum8==6])
subj_s4$non_learner <- ifelse(subj_s4$subject %in% non_learners,1,0)
#what conditions
table(subj_s4$condition[subj_s4$non_learner==1])
#33 high, 32 low nameability condition
binom.test(33,65,p=0.5)
#model fit with high-performing participants only
m <- glmer(isRight~conditionC+ (1|subject),data=subset(d,experiment %in% c("s4_shape+color")&!(subject %in% non_learners)),family=binomial)
summary(m)
summary(m)
confint(m,method="Wald")[2:3,]
m <- glmer(isRight~conditionC+ (1|subject),data=subset(d,experiment %in% c("s4_shape+color")&(subject %in% non_learners)),family=binomial)
summary(m)
confint(m,method="Wald")[2:3,]
#visualization of the distribution of accuracy in high vs. low conditions for high- and low-performing participants
ggplot(subj_s4,aes(accuracy))+geom_histogram()+facet_wrap(~condition+non_learner)
#overview over strategies reported
verbalSums4 <- subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType %in% c("singleFeature","multipleFeature","holisticStrategy","noStrategy","singleDimType","combinedDimType","noStrategy_DimType")) %>%
group_by(condition, codingType) %>%
summarize(
avg=mean(as.numeric(is_used)),
N=sum(!is.na(as.numeric(is_used))),
n=sum(as.numeric(is_used)),
se.lower=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[1],
se.upper=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[2])
verbalSums4
#overview over strategies reported
verbalSums4 <- subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType %in% c("singleFeature","multipleFeature","holisticStrategy","noStrategy","singleDimType","combinedDimType","noStrategy_DimType")) %>%
group_by(condition, codingType) %>%
summarize(
avg=mean(as.numeric(is_used)),
N=sum(!is.na(as.numeric(is_used))),
n=sum(as.numeric(is_used)),
se.lower=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[1],
se.upper=binom.test(sum(as.numeric(is_used)),sum(!is.na(as.numeric(is_used))))$conf.int[2])
verbalSums4
#test for differences in strategy use between conditions
#single feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="singleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
#multiple feature
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="multipleFeature"),family=binomial)
summary(m)
Anova(m,type="III")
#holistic strategy
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="holisticStrategy"),family=binomial)
summary(m)
Anova(m,type="III")
#single dimension
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="singleDimType"),family=binomial)
summary(m)
Anova(m,type="III")
#multiple dimension
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="combinedDimType"),family=binomial)
summary(m)
Anova(m,type="III")
#multiple dimension
m <- glm(is_used~condition,data=subset(verbal_strategy_long, (experiment=="s4_shape+color")&codingType=="combinedDimType"),family=binomial)
summary(m)
Anova(m,type="III")
#Strategy use and categorization accuracy
#features used
m <- glmer(isRight~conditionC+singleFeature+multipleFeature+holisticStrategy+ (1|subject),data=subset(verbal_strategy_d,(experiment=="s4_shape+color")),family=binomial)
summary(m)
#single vs. combined dimension
m <- glmer(isRight~conditionC+singleDimType+combinedDimType+ (1|subject),data=subset(verbal_strategy_d,(experiment=="s4_shape+color")),family=binomial)
summary(m)
subjOverall_byBlock_exps4 <- summarySEwithin(subset(subj_blocks,experiment=="s4_shape+color"),"accuracy",betweenvars=c("condition"),withinvars=c("blockNum"),idvar="subject")
ps4 <- ggplot(subjOverall_byBlock_exps4, aes(blockNum,accuracy,color=condition,group=condition))+
geom_line(size=2,position=position_dodge(.05))+
geom_errorbar(aes(ymin=accuracy-se,ymax=accuracy+se),width=0,size=0.75,position=position_dodge(.05))+
geom_point(aes(fill=condition),size=4,position=position_dodge(.05))+
theme_classic(base_size=24)+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
xlab("Block")+
ylab("Training Accuracy")+
scale_y_continuous(breaks=seq(0.5,1,0.1),limits=c(0.45,1))+
geom_hline(yintercept=0.5,linetype="dotted",size=1.1)+
theme(legend.position=c(.2, .75), legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))
ps4
####S4: Verbal Strategy - Graphing
ps4_verbal <- ggplot(verbalSums4,aes(codingType,avg,group=condition,color=condition,fill=condition))+
geom_bar(stat="identity",position=position_dodge(.75),size=1,width=0.7)+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),position=position_dodge(.75),width=0,color="black")+
scale_x_discrete(name = "Strategy Type", limits=c("singleFeature","multipleFeature","holisticStrategy","noStrategy"),labels=c("single\nfeature","multiple\nfeature","holistic","none"))+
ylab("Percent Responses")+
xlab("Strategy Type")+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
theme_classic(base_size=18)+
theme(legend.position=c(.5, .8),legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))
#summarize accuracy for each strategy type
sumSubjStrategySingleFeature_s4 <- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,singleFeature) %>%
summarize(strategy="single feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="singleFeature")
sumSubjStrategyMultipleFeature_s4 <- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,multipleFeature) %>%
summarize(strategy="multiple feature",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="multipleFeature")
sumSubjStrategyHolistic_s4 <- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,holisticStrategy) %>%
summarize(strategy="holistic",
acc=mean(accuracy),
se.lower=ifelse(sum(!is.na(accuracy))>1,t.test(accuracy)$conf.int[1],NA),
se.upper=ifelse(sum(!is.na(accuracy))>1,t.test(accuracy)$conf.int[2],NA)) %>%
rename(strategyCode="holisticStrategy")
sumSubjStrategyNoStrategy_s4<- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,noStrategy) %>%
summarize(strategy="none",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="noStrategy")
strategySummarized_s4 <- bind_rows(sumSubjStrategySingleFeature_s4,sumSubjStrategyMultipleFeature_s4,sumSubjStrategyHolistic_s4,sumSubjStrategyNoStrategy_s4)
strategySummarized_s4$strategyF <- factor(strategySummarized_s4$strategy,levels=c("single feature","multiple feature","holistic","none"))
ps4_Acc <- ggplot(strategySummarized_s4,aes(condition,acc,group=as.factor(strategyCode),fill=as.factor(strategyCode)))+
geom_bar(stat="identity",position=position_dodge(.9))+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),color="black",position=position_dodge(.9),width=0.1)+
facet_wrap(~strategyF)+
scale_fill_brewer(palette="Accent",name="Strategy Used?",direction=-1,breaks=c(1,0),labels=c("yes","no"))+
theme_classic(base_size=18)+
ylab("Accuracy")+
coord_cartesian(ylim=c(0,1.1))+
scale_y_continuous(breaks=c(0, 0.25, 0.5,0.75,1))
#plot all together
strat_s4 <- plot_grid(ps4_verbal,ps4_Acc,labels=c("A","B"))
strat_s4
#plot dimensions used
ps4_dim=ggplot(subset(verbalSums4,codingType %in% c("singleDimType","combinedDimType","noStrategy_DimType")),aes(codingType,avg,group=condition,color=condition,fill=condition))+
geom_bar(stat="identity",position=position_dodge(.75),size=1,width=0.7)+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),position=position_dodge(.75),width=0,color="black")+
scale_x_discrete(name = "Dimensional Combination", limits=c("singleDimType","combinedDimType","noStrategy_DimType"),labels=c("single\ndimension","combining\ndimensions","none"))+
ylab("Percent Responses")+
xlab("Dimensional Combination")+
scale_color_brewer(palette="Set1",name="Nameability")+
scale_fill_brewer(palette="Set1",name="Nameability")+
theme_classic(base_size=18)+
theme(legend.position=c(.8, .8),legend.text=element_text(size=16),legend.title=element_text(size=16,face="bold"))
ps4_dim
sumSubjStrategySingleDim_s4 <- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,singleDimType) %>%
summarize(strategy="single dim.",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="singleDimType")
sumSubjStrategyCombinedDim_s4<- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,combinedDimType) %>%
summarize(strategy="combining dim.",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="combinedDimType")
sumSubjStrategynoStrategyDim_s4 <- filter(subj_accuracy,experiment=="s4_shape+color") %>%
group_by(condition,noStrategy_DimType) %>%
summarize(strategy="none",
acc=mean(accuracy),
se.lower=t.test(accuracy)$conf.int[1],
se.upper=t.test(accuracy)$conf.int[2]) %>%
rename(strategyCode="noStrategy_DimType")
strategySummarized_s4 <- bind_rows(sumSubjStrategySingleDim_s4,sumSubjStrategyCombinedDim_s4,sumSubjStrategynoStrategyDim_s4)
#experiment S4
strategySummarized_s4$strategyF=factor(strategySummarized_s4$strategy,levels=c("single dim.","combining dim.","none"))
ps4_DimAcc=ggplot(strategySummarized_s4,aes(condition,acc,group=as.factor(strategyCode),fill=as.factor(strategyCode)))+
geom_bar(stat="identity",position=position_dodge(.9))+
geom_errorbar(aes(ymin=se.lower,ymax=se.upper),color="black",position=position_dodge(.9),width=0.1)+
facet_wrap(~strategyF,ncol=2)+
scale_fill_brewer(palette="Accent",name="Strategy Used?",direction=-1,breaks=c(1,0),labels=c("yes","no"))+
theme_classic(base_size=18)+
ylab("Accuracy")+
coord_cartesian(ylim=c(0,1.1))+
scale_y_continuous(breaks=c(0, 0.25, 0.5,0.75,1))
ps4_DimAcc
strat_s4_dim=plot_grid(ps4_dim,ps4_DimAcc,labels=c("A","B"))
strat_s4_dim
3000/19000
